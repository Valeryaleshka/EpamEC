public class Test2 {
    public static int binarySearch(int arr[], int elementToSearch,int lastIndex) {

        int firstIndex = 0;
        
        //Если элемент больше максимального ставим в конец
        if (elementToSearch>=arr[lastIndex]){
            return lastIndex+1;
        }
        
        //Если элемент меньше минимального ставим в начало
        if (elementToSearch<=arr[firstIndex]){
            return 0;
        }

        while(firstIndex<=lastIndex) {
            
            //Находим середину
            int middleElement = (firstIndex + lastIndex )/2;


            //Главное условие на поиск нужного места
            if (arr[middleElement]>=elementToSearch && arr[middleElement-1]<elementToSearch) {
                return middleElement;
            }


            //Если среднее число меньше искомого, то переходим в правую часть
            if (arr[middleElement]<elementToSearch){
                firstIndex = middleElement +1;
            }

            //Если среднее число больше искомого, то переходим в левую часть
            if (arr[middleElement]>elementToSearch) {
                lastIndex = middleElement -1;
            }


        }
        return -1;
    }


    public static void main(String[] arg) {
        boolean bool = false;
        int temp;
        
        //создаем массим an
        int arrow[] = {0,2,3,4,6,8,1,10,15,7,2,1,5,8,7,22};
            
            //обозначаем упорядоченный массив аi
        for (int i = 5;i<arrow.length-1;i++) {
                
            //запускаем метод бинарного поиска и нахдим нужное место
            int x = binarySearch(arrow, arrow[i+1], i);
                
            //вставляем элемент i+1 в нужное место
            temp = arrow[x];
            arrow[x]= arrow[i+1];
            arrow[i+1]=temp;
                
            //сдвигаем всё вправо от нужного места
                
            do {
                bool = true;
                for (int a = x; a < i+1; a++) {
                    if (arrow[a] > arrow[a + 1]) {
                        temp = arrow[a];
                        arrow[a] = arrow[a + 1];
                        arrow[a + 1] = temp;
                        bool = false;
                    }
                }
            } while (!bool);

        }
            
            //Выводим результат
        
        for (int i =0;i<arrow.length;i++){
                System.out.print(arrow[i]+" ");
        }
    }
}
